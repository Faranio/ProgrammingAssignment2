y <- strptime("Jan 2012 1", "%B %Y %d")
y
x
x - y
y <- as.Date(y)
y
y - x
x - y
getwd()
swirl()
library(swirl)
swirl()
T == T
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
!(5 == 7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
isTRUE(3)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
length(ints)
ints
?sample
ints > 5
which(ints > 7)
any(ints < 0)
all(ints > 0)
?swirl
swirl_options
swirl_options()
swirl()
nxt()
nxt()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
Sys.Date()
mean(c(2, 4, 5))
submit()
boring_function('My first function!')
boring_function
submit()
my_mean(c(4, 5, 10))
submit()
remainder(5)
remainder(11, 5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
submit()
?stdev
?st_dev
?standard_deviation
?st
?sd
evaluate(sd, c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x) {x + 1}, 6)
evaluate(function(x) {x[1]}, c(8, 4, 0))
evaluate(function(x) {x[-1]}, c(8, 4, 0))
evaluate(function(x) {x[3]}, c(8, 4, 0))
evaluate(function(x) {x[-(1:length(x))]}, c(8, 4, 0))
evaluate(function(x) {x[length(x)]}, c(8, 4, 0))
?paste
paste("Programming", "is", "fun!")
submit()
telegram("Hello", "my", "dear", "friend")
submit()
mad_libs("hell", "yeay", "bro")
mad_libs("Nur-Sultan", "clever", "Nazarbayev")
mad_libs(place = "Nur-Sultan", adjective = "clever", noun = "Nazarbayev")
submit()
'I' %p% 'love' %p% 'R!'
d1 <- Sys.Date()
class(d1)
d1
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
t1
unclass(t1) - (unclass(as.POSIXct("1900-01-01")))
t3 <- as.POSIXct("1900-01-01")
t3
unclass(t3)
unclass(t1) - unclass(t3)
str(unclass(t2))
t2
t2$min
d1
weekdays(d1)
t1
months(t1)
quarters(t2)
t2
?quarters
t3 <- "October 17, 1986 08:24"
t4 <- strptime("%B %d, %Y, %H:%M")
t4 <- strptime(t3, "%B %d, %Y, %H:%M")
t4
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
search()
search("package:swirl")
getwd()
dir("specdata")
v <- list(1, 2)
v
v.append
v.append()
v <- list(v, 3)
v
v <- c(10, 12)
v
v <- c(v, 13)
v
values <- read.csv(file.path("specdata", "1.csv"))
getwd()
getwd()
dir()
values <- read.csv("specdata/1.csv")
values <- read.csv("specdata\1.csv")
values <- read.csv(file.path("specdata", "1.csv")
)
dir("specdata")
values <- read.csv(file.path("specdata", "001.csv")
)
values
values <- read.csv(file.path("specdata", "001.csv")["sulfate"]
)
values <- read.csv(file.path("specdata", "001.csv"))["sulfate"]
values
values <- read.csv(file.path("specdata", "001.csv"))[["sulfate"]]
values
pollutantmean <- function(directory, pollutant, id = 1:332) {
for (i in id) {
values <- c(values, read.csv(file.path(directory, dir(directory)[i])))
}
values
}
pollutantmean("specdata", "nitrate")
pollutantmean <- function(directory, pollutant, id = 1:332) {
for (i in id) {
values <- c(values, read.csv(file.path(directory, dir(directory)[i]))[[pollutant]])
}
values
}
pollutantmean("specdata", "nitrate", 10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
source("complete.R")
complete("specdata", 1:10)
nobs <- read.csv("specdata/001.csv")
nobs
nobs[!is.na(nobs$sulfate)]
nobs[which(!is.na(nobs$sulfate))]
nobs[which(!is.na(nobs$sulfate)),]
nobs[which(!is.na(nobs$sulfate) & !is.na(nobs%nitrate)),]
nobs[which(!is.na(nobs$sulfate) & !is.na(nobs$nitrate)),]
length(nobs[which(!is.na(nobs$sulfate) & !is.na(nobs$nitrate)),])
dim(nobs[which(!is.na(nobs$sulfate) & !is.na(nobs$nitrate)),])
complete("specdata", 1:10)
source("complete.R")
complete("specdata", 1:10)
source("complete.R")
complete("specdata", 1:10)
source("complete.R")
complete("specdata", 1:10)
data <- data.frame()
data
data <- data.frame(c(1, 100))
data
source("complete.R")
complete("specdata", 1:10)
source("complete.R")
complete("specdata", 1:10)
source("complete.R")
complete("specdata", 1:10)
source("complete.R")
complete("specdata", 1:10)
source("complete.R")
complete("specdata", 1:10)
source("complete.R")
complete("specdata", 1:10)
?vector
source("complete.R")
?vector
complete("specdata", 1:10)
?vector
source("complete.R")
complete("specdata", 1:10)
source("complete.R")
complete("specdata", 1:10)
source("complete.R")
complete("specdata", 1:10)
source("complete.R")
complete("specdata", 1:10)
source("complete.R")
complete("specdata", 1:10)
?data.frane
?data.frame
source("complete.R")
complete("specdata", 1:10)
source("complete.R")
complete("specdata", 1:10)
source("complete.R")
complete("specdata", 1:10)
source("complete.R")
complete("specdata", 1:10)
source("complete.R")
complete("specdata", 1:10)
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
complete("specdata", 3)
?cor
source("corr.R")
cr <- corr("specdata", 150)
cr
cr
rm(data)
rm(nobs)
head(cr)
source("corr.R")
cr <- corr("specdata", 150)
source("corr.R")
cr <- corr("specdata", 150)
source("corr.R")
cr <- corr("specdata", 150)
source("corr.R")
cr <- corr("specdata", 150)
cr
cr <- corr("specdata", 150)
source("corr.R")
cr <- corr("specdata", 150)
source("corr.R")
cr <- corr("specdata", 150)
source("corr.R")
cr <- corr("specdata", 150)
source("corr.R")
cr <- corr("specdata", 150)
source("corr.R")
cr <- corr("specdata", 150)
cr
head(cr)
summary(cr)
cr <- corr("specdata", 400)
head(cr)
summary(cr)
cr <- corr("specdata", 5000)
summary(cr)
length(cr)
cr <- corr("specdata")
summary(cr)
length(cr)
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "sulfate", 34)
pollutantmean("specdata", "nitrate")
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
print(cc$nobs)
cc <- complete("specdata", 54)
print(cc$nobs)
RNGversion("3.5.1")
set.seed(42)
cc <- complete("specdata", 332:1)
use <- sample(332, 10)
print(cc[use, "nobs"])
cr <- corr("specdata")
cr <- sort(cr)
RNGversion("3.5.1")
set.seed(868)
out <- round(cr[sample(length(cr), 5)], 4)
print(out)
cr <- corr("specdata", 129)
cr <- sort(cr)
n <- length(cr)
RNGversion("3.5.1")
set.seed(197)
out <- c(n, round(cr[sample(n, 5)], 4))
print(out)
cr <- corr("specdata", 2000)
n <- length(cr)
cr <- corr("specdata", 1000)
cr <- sort(cr)
print(c(n, round(cr, 4)))
getwd()
x <- 1:10
x
lapply(x, mean)
x <- list(1:10)
x
lapply(x, mean)
rnorm(100, 5)
rnorm(20, 1)
getwd()
x <- c(1:10, rnorm(10), runif(10))
x
f <- gl(3, 10)
split(x, f)
y <- split(x, f)
y
y$1
y$'1'
y$'2'
y['1']
y['1',]
?tapply
tapply(x, f, mean)
lapply(split(x, f), mean)
tapply(x, f, mean)[1]
tapply(x, f, mean)[2]
library(datasets)
head(airquality)
s <- split(airquality, airquality&Day)
s <- split(airquality, airquality$Day)
s
lapply(s, function(x) colMeans(x[, c('Ozone', 'Solar.R', 'Wind', 'Temp')]))
lapply(s, function(x) colMeans(x[, c('Ozone', 'Solar.R', 'Wind', 'Temp')], na.rm = T))
sapply(s, function(x) colMeans(x[, c('Ozone', 'Solar.R', 'Wind', 'Temp')], na.rm = T))
f1 <- gl(3, 15)
f2 <- gl(5, 15)
f1
f2
f2 <- gl(3, 5)
f1 <- gl(3, 5)
f2 <- gl(5, 3)
f1
f2
f3 <- interaction(f1, f2)
f3
interaction(airquality$Month, airquality$Day)
f <- interaction(airquality$Month, airquality$Day)
f
sapply(x, f, mean)
tapply(x, f, mean)
x
x <- airquality
x
tapply(x, f, mean)
sapply(x, mean)
split(x, list(airquality$Month, airquality$Day))
str(split(x, list(airquality$Month, airquality$Day)))
log(-20)
x
invisible(x)
c <- invisible(x)
c
getwd()
traceback(mean)
?traceback
traceback
traceback(mean)
traceback
traceback(mean)
traceback()
mean()
traceback()
debug(mean)
mean()
mean()
cat(x)
?cat
cat("Hello", "farkhad")
paste("Hello", "Farkhad")
cat("Hello", "farkhad")
swirl()
package(swirl)
library(swirl)
swirl()
head(flags)
dim(flags)
viewinfo()
class(falgs)
class(flags)
as.list(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
q
exit()
sapply(flag_colors, mean)
getwd()
library(swirl)
swirl()
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags, unique)
unique_vals
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
flags$landmass
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
library(datasets)
data(iris)
?iris
iris
tapply(iris$Sepal.Length, iris$Species, mean)
apply(iris, mean)
apply(iris[, 1:4], mean)
apply(iris, 2, mean)
colMeans(iris)
apply(iris[, 1:4], 2, mean)
library(datasets)
data(mtcars)
?mtcars
split(mtcars, mtcars$cyl)
sapply(mtcars, cyl, mean)
with(mtcars, tapply(mpg, cyl, mean))
tapply(mtcars$mpg, mtcars$cyl, mean)
?split
sapply(split(mtcars$mpg, mtcars$cyl), mean)
mean(mtcars$mpg, mtcars$cyl)
abs(5 - 8)
?mtcars
tapply(mtcars$hp, mtcars$cyl, mean)
tapply(mtcars$hp, mtcars$cyl, mean)[1]
tapply(mtcars$hp, mtcars$cyl, mean)[1][1]
tapply(mtcars$hp, mtcars$cyl, mean)[[1]]
t1 <- tapply(mtcars$hp, mtcars$cyl, mean)[[1]]
t2 <- tapply(mtcars$hp, mtcars$cyl, mean)[[3]]
t2
t1
abs(t1 - t2)
debug(ls)
ls()
getwd()
getwd()
setwd("ProgrammingAssignment2")
getwd()
dir()
package(cachematrix.R)
source(cachematrix.R)
source("cachematrix.R")
makeCacheMatrix()
x <- makeCacheMatrix(matrix(1, 2, 3))
x
cacheSolve(x)
x <- makeCacheMatrix(matrix(1, 3, 3))
cacheSolve(x)
x <- makeCacheMatrix(matrix(1, 2, 2))
cacheSolve(x)
